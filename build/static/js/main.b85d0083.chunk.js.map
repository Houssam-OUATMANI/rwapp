{"version":3,"sources":["assets/cold.gif","assets/warm.gif","pages/form.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","useState","undefined","weather","setWeather","activeBtn","setActiveBtn","inputRef","useRef","btnRef","letTheMagieHappen","e","a","preventDefault","inputValue","current","value","URL","fetch","response","json","data","ok","alert","console","log","onSubmit","className","htmlFor","onChange","target","type","placeholder","ref","disabled","name","Math","round","main","temp","temp_min","temp_max","feels_like","humidity","src","warmImg","coldImg","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAAe,G,MAAA,IAA0B,kCCA1B,MAA0B,iC,OCK1B,SAASA,IAAQ,IAAD,EACAC,wBAASC,GADT,mBACvBC,EADuB,KACdC,EADc,OAEIH,mBAAS,IAFb,mBAEvBI,EAFuB,KAEZC,EAFY,KAGxBC,EAAWC,mBACXC,EAASD,mBAJe,SAMfE,EANe,8EAM9B,WAAiCC,GAAjC,qBAAAC,EAAA,6DACCD,EAAEE,iBACIC,EAAaP,EAASQ,QAAQC,MAC9BC,EAHP,2DAGiEH,EAHjE,iEAIwBI,MAAMD,GAJ9B,cAIOE,EAJP,gBAKoBA,EAASC,OAL7B,OAKOC,EALP,OAMIF,EAASG,GACXlB,EAAWiB,GAGXE,MAAM,mBAEPhB,EAASQ,QAAQC,MAAQ,GAZ1B,6CAN8B,sBAsB9B,OADAQ,QAAQC,IAAItB,GACPA,EAcH,gCACC,uBAAMuB,SAAUhB,EAAhB,UACC,sBAAKiB,UAAU,aAAf,UACC,uBAAOC,QAAQ,OAAf,0BACA,uBAAOC,SAAU,SAAClB,GAAD,OAAOL,EAAaK,EAAEmB,OAAOd,QAAQe,KAAK,OAAOC,YAAY,SAASC,IAAK1B,OAE7F,wBAAQ2B,UAAW7B,EAAW0B,KAAK,SAASJ,UAAU,kBAAtD,uBAKD,0BAASA,UAAU,WAAnB,UACC,8CAAiBxB,EAAQgC,QACzB,sBAAKR,UAAU,UAAf,UACC,oCACC,+CACe,+BAAOS,KAAKC,MAAMlC,EAAQmC,KAAKC,QAAc,IAD5D,aAIA,gDACgB,+BAAOH,KAAKC,MAAMlC,EAAQmC,KAAKE,YAAkB,IADjE,UAES,OAET,gDACgB,+BAAOJ,KAAKC,MAAMlC,EAAQmC,KAAKG,YAAkB,IADjE,UAES,OAET,6CACa,+BAAOL,KAAKC,MAAMlC,EAAQmC,KAAKI,cAAoB,IADhE,UAES,OAET,4CACY,+BAAOvC,EAAQmC,KAAKK,WADhC,KACmD,UAGpD,qBAAKhB,UAAU,SAAf,SACC,qBAAKiB,IAAKzC,EAAQmC,KAAKC,KAAO,GAAKM,EAAUC,EAASC,IAAI,gBAhD9D,uBAAMrB,SAAUhB,EAAhB,UACC,sBAAKiB,UAAU,aAAf,UACC,uBAAOC,QAAQ,OAAf,0BACA,uBAAQC,SAAU,SAAClB,GAAD,OAAOL,EAAaK,EAAEmB,OAAOd,QAAQe,KAAK,OAAOC,YAAY,SAASC,IAAK1B,OAE9F,wBAAQ2B,UAAW7B,EAAW4B,IAAKxB,EAAQsB,KAAK,SAASJ,UAAU,kBAAnE,uBCtBWqB,MAVf,WACE,OACE,qBAAKrB,UAAU,gBAAf,SACE,+BACM,cAAC3B,EAAD,SCMGiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b85d0083.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cold.730f90f9.gif\";","export default __webpack_public_path__ + \"static/media/warm.45518947.gif\";","import React, { useState, useRef } from \"react\"\nimport \"./form.css\"\nimport coldImg from \"../assets/cold.gif\"\nimport warmImg from \"../assets/warm.gif\"\n\nexport default function Form() {\n\tconst [weather, setWeather] = useState(undefined)\n\tconst [activeBtn, setActiveBtn] = useState(\"\")\n\tconst inputRef = useRef()\n\tconst btnRef = useRef()\n   \n\tasync function letTheMagieHappen(e) {\n\t\te.preventDefault()\n\t\tconst inputValue = inputRef.current.value\n\t\tconst URL = `http://api.openweathermap.org/data/2.5/weather?q=${inputValue}&units=metric&appid=200b01d1422a0be035b2231349dd26ae`\n\t\tconst response = await fetch(URL)\n\t\tconst data = await response.json()\n\t\tif(response.ok){\n\t\t\tsetWeather(data)\n\t\t}\n\t\telse {\n\t\t\talert('Unknown City :(')\n\t\t}\n\t\tinputRef.current.value = \"\"\n\t}\n\n\tconsole.log(weather)\n\tif (!weather) {\n\t\treturn (\n\t\t\t<form onSubmit={letTheMagieHappen}>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"city\">Enter a City</label>\n\t\t\t\t\t<input  onChange={(e) => setActiveBtn(e.target.value)} type=\"text\" placeholder=\"Bejaia\" ref={inputRef} />\n\t\t\t\t</div>\n\t\t\t\t<button disabled={!activeBtn} ref={btnRef} type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form onSubmit={letTheMagieHappen}>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label htmlFor=\"city\">Enter a City</label>\n\t\t\t\t\t\t<input onChange={(e) => setActiveBtn(e.target.value)} type=\"text\" placeholder=\"Bejaia\" ref={inputRef} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<button disabled={!activeBtn} type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\n\t\t\t\t<section className=\"display1\">\n\t\t\t\t\t<h2>Weather For {weather.name}</h2>\n\t\t\t\t\t<div className=\"display\">\n\t\t\t\t\t\t<article>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tTemperature : <span>{Math.round(weather.main.temp)}</span>{\" \"}\n\t\t\t\t\t\t\t\tcelsius\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tMinimal temp : <span>{Math.round(weather.main.temp_min)}</span>{\" \"}\n\t\t\t\t\t\t\t\tcelsius{\" \"}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tMaximal temp : <span>{Math.round(weather.main.temp_max)}</span>{\" \"}\n\t\t\t\t\t\t\t\tcelsius{\" \"}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tfeel temp : <span>{Math.round(weather.main.feels_like)}</span>{\" \"}\n\t\t\t\t\t\t\t\tcelsius{\" \"}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tHumidity : <span>{weather.main.humidity}</span> %{\" \"}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</article>\n\t\t\t\t\t\t<div className=\"images\">\n\t\t\t\t\t\t\t<img src={weather.main.temp > 12 ? warmImg : coldImg} alt=\"\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","\nimport Form from './pages/form';\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <main>\n            <Form/>\n        </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}